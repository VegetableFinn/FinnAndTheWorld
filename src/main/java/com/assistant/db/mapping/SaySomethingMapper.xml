<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.assistant.db.dao.SaySomethingMapper">
    <resultMap id="BaseResultMap" type="com.assistant.db.model.SaySomething">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="trigger_regex" property="triggerRegex" jdbcType="VARCHAR"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/>
        <result column="enable" property="enable" jdbcType="CHAR"/>
        <result column="effects" property="effects" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, trigger_regex, gmt_create, gmt_modified, enable, effects
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from say_something
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByTrigger" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from say_something
        where trigger_regex = #{triggerRegex,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from say_something
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.assistant.db.model.SaySomething">
    insert into say_something (id, trigger_regex, gmt_create,
      gmt_modified, enable, effects
      )
    values (#{id,jdbcType=INTEGER}, #{triggerRegex,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP},
      #{gmtModified,jdbcType=TIMESTAMP}, #{enable,jdbcType=CHAR}, #{effects,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.assistant.db.model.SaySomething">
        insert into say_something
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="triggerRegex != null">
                trigger_regex,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
            <if test="enable != null">
                enable,
            </if>
            <if test="effects != null">
                effects,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="triggerRegex != null">
                #{triggerRegex,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="enable != null">
                #{enable,jdbcType=CHAR},
            </if>
            <if test="effects != null">
                #{effects,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.assistant.db.model.SaySomething">
        update say_something
        <set>
            <if test="triggerRegex != null">
                trigger_regex = #{triggerRegex,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="enable != null">
                enable = #{enable,jdbcType=CHAR},
            </if>
            <if test="effects != null">
                effects = #{effects,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.assistant.db.model.SaySomething">
    update say_something
    set trigger_regex = #{triggerRegex,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      enable = #{enable,jdbcType=CHAR},
      effects = #{effects,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>